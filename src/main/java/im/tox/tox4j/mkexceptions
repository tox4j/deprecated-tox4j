#!/usr/bin/env perl

use strict;
use warnings FATAL => 'all';
use utf8;

use JSON::PP;

my $data = do { local $/; open my $fh, '<', 'exceptions.json' or die $!; decode_json <$fh> };

my $package = $data->[0];
my $exns = $data->[1];

for my $type (keys %$exns) {
   open my $fh, '>', "Tox${type}Exception.java"
      or die $!;

   for (keys $exns->{$type}) {
      my @lines = @{ $exns->{$type}{$_} };
      s/^/     * / for @lines;
      $exns->{$type}{$_} = join "\n", @lines;
   }

   my $codes = join ",\n", map { "    /**\n$exns->{$type}{$_}\n     */\n    $_" } (sort keys $exns->{$type});

   print $fh <<JAVA;
package im.tox.tox4j.$package.exceptions;

import im.tox.tox4j.annotations.NotNull;
import im.tox.tox4j.exceptions.ToxException;

public final class Tox${type}Exception extends ToxException<Tox${type}Exception.Code> {

  public enum Code {
$codes,
  }

  public Tox${type}Exception(\@NotNull Code code) {
    this(code, "");
  }

  public Tox${type}Exception(\@NotNull Code code, String message) {
    super(code, message);
  }

}
JAVA

}
